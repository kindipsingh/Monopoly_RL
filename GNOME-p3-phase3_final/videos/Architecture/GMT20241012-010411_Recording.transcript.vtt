WEBVTT

1
00:00:01.680 --> 00:00:20.420
Min-Hsueh Chiu: This video is about the architecture of monopoly simulator. So this monopoly is designed as a 3rd person. Perspective simulator, meaning, it operates with a back and a engine to manage the core game mechanics, while

2
00:00:20.490 --> 00:00:24.589
Min-Hsueh Chiu: the client software interact with the gaming engine.

3
00:00:24.730 --> 00:00:32.999
Min-Hsueh Chiu: So as you can see, here's the top label, Directory. There's a me requirement, and inside of the package

4
00:00:35.920 --> 00:00:41.380
Min-Hsueh Chiu: inside a package. So I will introduce the 3 main

5
00:00:41.500 --> 00:00:49.240
Min-Hsueh Chiu: component so there will be a base simulator, client connection and novelty generator.

6
00:00:49.410 --> 00:00:53.710
Min-Hsueh Chiu: So 1st of all, we will define

7
00:00:53.930 --> 00:00:57.110
Min-Hsueh Chiu: the monopoly rules and

8
00:00:57.160 --> 00:00:58.540
Min-Hsueh Chiu: basic

9
00:00:58.640 --> 00:01:16.430
Min-Hsueh Chiu: parameter in this Json file. So here is how it looked like there's a location sequence. There's some go increment and dice information inside here. So this, allow us to customize the environment.

10
00:01:16.770 --> 00:01:19.160
Min-Hsueh Chiu: And okay. So

11
00:01:19.640 --> 00:01:29.749
Min-Hsueh Chiu: so other than this, we can see there's a lot of object, because, we design simulator using object oriented design.

12
00:01:30.090 --> 00:01:36.550
Min-Hsueh Chiu: So I will show you some key components like their action.

13
00:01:36.590 --> 00:01:38.289
Min-Hsueh Chiu: So this is

14
00:01:38.430 --> 00:01:40.860
Min-Hsueh Chiu: this is the action.

15
00:01:41.606 --> 00:01:43.990
Min-Hsueh Chiu: They're allowed to do.

16
00:01:44.730 --> 00:01:55.800
Min-Hsueh Chiu: And there's also agent. So agent is a place holder for strategy, and it will integrate later in the player object.

17
00:01:56.260 --> 00:02:01.440
Min-Hsueh Chiu: And, as you can see there's several background agent

18
00:02:01.530 --> 00:02:06.190
Min-Hsueh Chiu: that allow to play with user.

19
00:02:06.250 --> 00:02:11.870
Min-Hsueh Chiu: And of course there's bank very straightforward. There's card

20
00:02:12.130 --> 00:02:19.885
Min-Hsueh Chiu: right? And card is for community and a chance card, and it might have some

21
00:02:21.137 --> 00:02:30.100
Min-Hsueh Chiu: usage. So I we will put in. Put the function inside the card u utility action here.

22
00:02:30.440 --> 00:02:33.229
Min-Hsueh Chiu: And let's see.

23
00:02:33.420 --> 00:02:35.410
Min-Hsueh Chiu: okay, there's a dice.

24
00:02:35.670 --> 00:02:37.403
Min-Hsueh Chiu: there's a

25
00:02:38.330 --> 00:02:39.570
Min-Hsueh Chiu: location.

26
00:02:39.950 --> 00:02:43.719
Min-Hsueh Chiu: right? Which is house or structure on a board.

27
00:02:44.880 --> 00:02:47.359
Min-Hsueh Chiu: And lastly, we will have player.

28
00:02:47.480 --> 00:02:58.360
Min-Hsueh Chiu: So it's include both mentioned agents and also some money status of the player. Information was store storing here.

29
00:02:58.510 --> 00:03:01.343
Min-Hsueh Chiu: So with this component

30
00:03:01.960 --> 00:03:05.869
Min-Hsueh Chiu: we can build a basic simulator and run locally

31
00:03:06.180 --> 00:03:12.240
Min-Hsueh Chiu: and as you can see that here's a gameplay.

32
00:03:13.000 --> 00:03:16.430
Min-Hsueh Chiu: So here have the simulate

33
00:03:16.450 --> 00:03:21.220
Min-Hsueh Chiu: simulate. Gan instance. So here's the main logic here.

34
00:03:21.320 --> 00:03:22.715
Min-Hsueh Chiu: and you can

35
00:03:23.630 --> 00:03:27.399
Min-Hsueh Chiu: you can execute this to run a local game.

36
00:03:27.780 --> 00:03:29.830
Min-Hsueh Chiu: So this is for the 1st part.

37
00:03:30.230 --> 00:03:44.610
Min-Hsueh Chiu: and the second part is about the connection between game, engine and client software. So we use socket communication. So this is a Tcp network interface

38
00:03:44.650 --> 00:03:49.150
Min-Hsueh Chiu: allow to software connect via IP address and ports.

39
00:03:49.510 --> 00:03:53.070
Min-Hsueh Chiu: So there's 2 components. The 1st one

40
00:03:53.180 --> 00:03:56.009
Min-Hsueh Chiu: is where is

41
00:03:56.820 --> 00:03:59.980
Min-Hsueh Chiu: the 1st one will be client, agent, serial.

42
00:04:00.530 --> 00:04:04.030
Min-Hsueh Chiu: and the other one will be.

43
00:04:04.920 --> 00:04:06.190
Min-Hsueh Chiu: Let's see where

44
00:04:06.250 --> 00:04:08.660
Min-Hsueh Chiu: server agents serial.

45
00:04:08.730 --> 00:04:12.410
Min-Hsueh Chiu: So both of them act as a communicator.

46
00:04:12.610 --> 00:04:25.920
Min-Hsueh Chiu: and to be more specific server agent is responsible to communicating between game engine and the client. It sends the game, state information to the client

47
00:04:26.070 --> 00:04:27.820
Min-Hsueh Chiu: and retrieve

48
00:04:27.930 --> 00:04:30.109
Min-Hsueh Chiu: the clients, choose a move.

49
00:04:30.650 --> 00:04:35.870
Min-Hsueh Chiu: and client agent, on the other hand, is responsible to receive

50
00:04:35.930 --> 00:04:39.059
Min-Hsueh Chiu: game, state information from the server

51
00:04:39.300 --> 00:04:44.560
Min-Hsueh Chiu: and decide design what move based on the receive data

52
00:04:44.580 --> 00:04:49.580
Min-Hsueh Chiu: and then send the select move back to server agent.

53
00:04:49.900 --> 00:05:02.339
Min-Hsueh Chiu: So ensured. Server agents relay game information and client info client, agent response with agent with action. Sorry.

54
00:05:03.050 --> 00:05:09.010
Min-Hsueh Chiu: Okay. So that is how clients and game engine

55
00:05:09.140 --> 00:05:11.020
Min-Hsueh Chiu: can connect together.

56
00:05:11.540 --> 00:05:14.889
Min-Hsueh Chiu: So the 3rd one is novelty generator.

57
00:05:15.310 --> 00:05:16.270
Min-Hsueh Chiu: So

58
00:05:17.600 --> 00:05:31.700
Min-Hsueh Chiu: as you can see, there's a bunch of novelty. Prefix file. So the 3 main file will be novelty, generator, novelty, function, and novelty distribution.

59
00:05:32.190 --> 00:05:42.919
Min-Hsueh Chiu: So novelty generator is a fundamental primitive. Let's specify which function in a simulator. Simulator will be modified.

60
00:05:43.540 --> 00:05:45.440
Min-Hsueh Chiu: And now with the function

61
00:05:45.480 --> 00:05:49.669
Min-Hsueh Chiu: here. Implement the logic. Let's modify

62
00:05:50.335 --> 00:05:53.730
Min-Hsueh Chiu: the behavior of the original function

63
00:05:53.860 --> 00:05:59.059
Min-Hsueh Chiu: and novelty distribution. Here is the collection of composite novelty

64
00:05:59.070 --> 00:06:07.479
Min-Hsueh Chiu: that can be inject in monopoly game. So it consists of one or more primitive instance.

65
00:06:07.630 --> 00:06:13.069
Min-Hsueh Chiu: So this is a manual method to create a composite number team.

66
00:06:13.650 --> 00:06:18.010
Min-Hsueh Chiu: So at at a at a last one. I would like to.

67
00:06:18.751 --> 00:06:25.769
Min-Hsueh Chiu: Introduce that novelty, generation phase 3. So this script content

68
00:06:25.810 --> 00:06:30.299
Min-Hsueh Chiu: the function that can generate composite novelty.

69
00:06:31.215 --> 00:06:31.940
Min-Hsueh Chiu: Which

70
00:06:32.090 --> 00:06:38.039
Min-Hsueh Chiu: is defined in phase 3. Novelty config.

71
00:06:38.420 --> 00:06:41.080
Min-Hsueh Chiu: So let me show you here.

72
00:06:42.010 --> 00:06:46.029
Min-Hsueh Chiu: and let us see how is this look like?

73
00:06:46.090 --> 00:06:54.939
Min-Hsueh Chiu: So as you can see here we have a lot of novelty. So this will be the 1st one. It's called Environment one.

74
00:06:55.010 --> 00:06:58.189
Min-Hsueh Chiu: and it's Comp contain 5 primitive.

75
00:06:58.360 --> 00:07:10.580
Min-Hsueh Chiu: And there's a there's a novelty function here. And here's the novelty argument corresponding to each function. So that is how we can inject novelty

76
00:07:12.090 --> 00:07:17.189
Min-Hsueh Chiu: in the monopoly simulator, and this is the whole whole structure.

